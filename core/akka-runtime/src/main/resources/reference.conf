baker {

  actor {
    # either "local" or "cluster-sharded"
    provider = "local"

    # the recommended nr is number-of-cluster-nodes * 10
    cluster.nr-of-shards = 50

    # the time that inactive actors (processes) stay in memory
    idle-timeout = 5 minutes

    # The interval that a check is done of processes should be deleted
    retention-check-interval = 1 minutes

    # The interval of messages between creating snapshots for the actors
    snapshot-interval = 100

    # The amount of snapshots to keep for the actors
    snapshot-count = 3
  }

  # the default timeout for Baker.bake(..) process creation calls
  bake-timeout = 10 seconds

  # the timeout for refreshing the local recipe cache
  process-index-update-cache-timeout = 5 seconds

  # the default timeout for Baker.processEvent(..)
  process-event-timeout = 10 seconds

  # the default timeout for inquires on Baker, this means getIngredients(..) & getEvents(..)
  process-inquire-timeout = 10 seconds

  # when baker starts up, it attempts to 'initialize' the journal connection, this may take some time
  journal-initialize-timeout = 30 seconds

  # the default timeout for adding a recipe to Baker
  add-recipe-timeout = 10 seconds

  # the time to wait for a graceful shutdown
  shutdown-timeout = 30 seconds

  # the timeout when calling executeSingleInteraction
  execute-single-interaction-timeout = 60 seconds

  process-index {
    # Configurations for the restart policy for the ProcessIndex actor
    restart-minBackoff = 1 seconds
    restart-maxBackoff = 30 seconds
    restart-randomFactor = 0.2
    start-all-shards = true
    remember-process-duration = null
  }

  process-instance {
    # Configurations for the restart policy for the ProcessInstance actor
    restart-minBackoff = 1 seconds
    restart-maxBackoff = 30 seconds
    restart-randomFactor = 0.2
  }

  # process-instances that should not be loaded and will be deleted on startup
  blacklisted-processes = []

  # The ingredients that are filtered out when getting the process instance.
  # This should be used if there are big ingredients to improve performance and memory usage.
  # The ingredients will be in the ingredients map but there value will be an empty String.
  filtered-ingredient-values = []

  # Values to filter specifically for the GetIngredients call, this is combined with the filtered-ingredient-values
  filtered-ingredient-values-for-get = []

  # Values to filter specifically used for the internal event stream, this is combined with the filtered-ingredient-values
  filtered-ingredient-values-for-stream = []

  # Determines if a recipe can be added if not all needed interaction instances are available.
  allow-adding-recipe-without-requiring-instances = false

  # encryption settings
  encryption {

    # whether to encrypt data stored in the journal, off or on
    enabled = off

    # if enabled = on, a secret should be set
    # secret = ???
  }

  # leave blank for local baker, put implementation class for interaction discovery in bakery
  interactions.class = ""

  # If this is set to true it will also allow fur supersets of the output types to be given by the implementations
  # This can be helpful in case an ENUM type or similar is extended upon and you know these new values will not be given.
  # If this new value is given from the implementation this will result in te runtime error and a technical failure of the interaction.
  interactions.allow-superset-for-output-types = false
  interactions.kubernetes.pod-label-selector = ""
  interactions.localhost.port = 8081
}

akka {

  # by default we use the in memory journal from: https://github.com/dnvriend/akka-persistence-inmemory
  persistence.journal.plugin = "inmemory-journal"
  persistence.snapshot-store.plugin = "inmemory-snapshot-store"

  actor {

    serializers {

      baker-typed-protobuf = "com.ing.baker.runtime.akka.actor.serialization.BakerTypedProtobufSerializer"

    }

    serialization-bindings {

      "com.ing.baker.runtime.akka.actor.serialization.BakerSerializable" = baker-typed-protobuf

      "com.ing.baker.types.Value" = baker-typed-protobuf
      "com.ing.baker.types.Type" = baker-typed-protobuf
      "com.ing.baker.il.CompiledRecipe" = baker-typed-protobuf
      "com.ing.baker.runtime.scaladsl.EventInstance" = baker-typed-protobuf
      "com.ing.baker.runtime.scaladsl.RecipeInstanceState" = baker-typed-protobuf
      "com.ing.baker.runtime.scaladsl.RecipeEventMetadata" = baker-typed-protobuf

    }
  }
}
