
baker {

  interaction-manager = "remote"

  actor {
    provider = "cluster-sharded"
    idle-timeout = 1 minute
  }
}

cassandra-journal.contact-points.0 = "127.0.0.1"
cassandra-journal.contact-points.0 = ${?CASSANDRA_CONTACT_POINTS_0}

cassandra-snapshot-store.contact-points.0 = "127.0.0.1"
cassandra-snapshot-store.contact-points.0 = ${?CASSANDRA_CONTACT_POINTS_0}

akka.actor.allow-java-serialization = on

akka {

  actor {
    provider = "cluster"
  }

  persistence {
    # See https://doc.akka.io/docs/akka-persistence-cassandra/current/journal.html#configuration
    journal.plugin = "cassandra-journal"
    # See https://doc.akka.io/docs/akka-persistence-cassandra/current/snapshots.html#configuration
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = ${service.clusterHost}
      port = ${service.clusterPort}
    }
  }

  cluster {

    seed-nodes = [
      "akka.tcp://"${service.actorSystemName}"@"${service.seedHost}":"${service.seedPort}]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    # auto-down-unreachable-after = 10s
  }
}

kamon.instrumentation.akka.filters {

  actors.track {
    includes = [ ${service.actorSystemName}"/user/*" ]
    excludes = []
    #  ${service.actorSystemName}"/system/**", ${service.actorSystemName}"/user/worker-helper"
    #]
  }

  dispatchers {
    includes = [ ${service.actorSystemName}"/akka.actor.default-dispatcher" ]
  }

  routers {
    includes = [ ${service.actorSystemName}"/user/*" ]
  }
}
