baas-component {
  kubernetes-namespace = ${?NAMESPACE}
}

bakery-controller {

  # If false, bakery will use config maps labeled 'custom-resource-definition: <bakers|interactions>' instead of normal CRDs
  use-crds = true
  use-crds = ${?USE_CRDS}

  # Name of the config map which should contain the added 'application.conf' mounted into all state nodes
  bakery-global-config = "bakery-global-config"
  bakery-global-config = ${?BAKERY_GLOBAL_CONFIG}

  # If enabled, the bakery-controller will use the keystores from secrets (names on configuration below) to setup
  # tls mutual authentication between state nodes and interaction nodes
  https-mutual-auth = true
  https-mutual-auth = ${?BAKERY_HTTPS_MUTUAL_AUTH}

  interaction {

    # Secret containing keystore required for https and mutual auth for the interaction service client
    https-keystore-secret = "interaction-keystore"
    https-keystore-secret = ${?INTERACTION_HTTPS_KEYSTORE_SECRET}

    https-keystore-name = "interaction.ing-bank.github.io.jks"
    https-keystore-name = ${?INTERACTION_HTTPS_KEYSTORE_NAME}

    https-keystore-password = "changeit"
    https-keystore-password = ${?INTERACTION_HTTPS_KEYSTORE_PASSWORD}

    https-keystore-type = "JKS"
    https-keystore-type = ${?INTERACTION_HTTPS_KEYSTORE_TYPE}
  }

  interaction-client {

    # Secret containing keystore required for https and mutual auth for the interaction service
    https-keystore-secret = "interaction-client-keystore"
    https-keystore-secret = ${?INTERACTION_CLIENT_HTTPS_KEYSTORE_SECRET}

    https-keystore-name = "client.interaction.ing-bank.github.io.jks"
    https-keystore-name = ${?INTERACTION_CLIENT_HTTPS_KEYSTORE_NAME}

    https-keystore-password = "changeit"
    https-keystore-password = ${?INTERACTION_CLIENT_HTTPS_KEYSTORE_PASSWORD}

    https-keystore-type = "JKS"
    https-keystore-type = ${?INTERACTION_CLIENT_HTTPS_KEYSTORE_TYPE}
  }
}

akka {
  loglevel = "ERROR"
}


akka.http.host-connection-pool.idle-timeout = 21474835s

skuber {

  akka {
    # The ID of the dispatcher to use by Skuber. If undefined or empty the default Akka dispatcher is used.
    dispatcher = ""
  }

  watch {
    # The idle timeout duration for any connections used by skuber `watch` requests - if null the timeout is infinite.
    idle-timeout = null
  }

  pod-log {
    # The idle timeout duration for any connections used by skuber `pod log` requests - if null the timeout is infinite.
    idle-timeout = null
  }

  watch-continuously {
    # Timeout that is passed to the kubernetes cluster for all list/watch calls. This limits the duration of the call,
    # regardless of any activity or inactivity.
    request-timeout = 21474834s

    # The idle timeout for the connection before if closes due to inactivity. The idle-timeout must be a great value
    # than that used for timeout-seconds.
    idle-timeout = 21474835s

    # The idle timeout for the connection pool used by the Watch Source (each source has its own connection pool).
    # When the pool is no longer used by the source and the idle time has been exceeded the pool will shutdown and
    # reclaim the unused resources.
    pool-idle-timeout = 21474835s

  }
}
