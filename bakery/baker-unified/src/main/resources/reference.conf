include "baker.conf"

baker {
  encryption.enabled = off
  metrics-port = 9095

  api-port = 8080
  api-url-prefix = "/api/bakery"
  api-logging-enabled = false

  bake-timeout = 30 seconds
  add-recipe-timeout = 30 seconds
  journal-initialize-timeout = 30 seconds
  allow-adding-recipe-without-requiring-instances = true

  interaction-configuration-classes = []

  actor {
    provider = "cluster-sharded"
    idle-timeout = 1 minute
    retention-check-interval = 1 hour
  }

  kafka-event-sink {
    enabled: false,
    bootstrap-servers: "",
    baker-events-topic: "baker-events",
    recipe-events-topic: "recipe-events"
  }

}

akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  jvm-exit-on-fatal-error = true
  log-config-on-start = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  cluster {
    roles = ["state-node"]
    min-nr-of-members = 1
    configuration-compatibility-check.enforce-on-join = off
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"

    sharding {
      least-shard-allocation-strategy.rebalance-threshold = 5
      remember-entities = on
    }
    shutdown-after-unsuccessful-join-seed-nodes = 5m
    akka.remote.use-passive-connections = off

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"

    split-brain-resolver {
      active-strategy = keep-majority
      stable-after = 20s
      down-all-when-unstable = on
    }
  }

  discovery {
    kubernetes-api {
      pod-label-selector = "akka-cluster=%s"
    }
  }

  extensions = [akka.persistence.Persistence]

  management {
    cluster.bootstrap {
      contact-point-discovery {
        service-name = "bakery"
        discovery-method = kubernetes-api
        required-contact-point-nr = 1
      }
    }
    health-checks {
      readiness-path = "health/ready"
      liveness-path = "health/alive"
      liveness-checks {
        cluster-health = "com.ing.bakery.baker.ClusterHealthCheck"
      }
      readiness-checks {
        name = "com.ing.bakery.baker.BakerReadinessCheck"
      }
    }
  }
}


kamon {
  prometheus.start-embedded-http-server = no
  system-metrics {
    sigar-enabled = false
    jmx-enabled = false
  }
  modules {
    prometheus-reporter.enabled = no
    status-page.enabled = no
    host-metrics.enabled = no
    process-metrics.enabled = no
    jvm-metrics.enabled = no
  }

  instrumentation {
    http-server.default.metrics.enabled = no
    akka {
      http {
        client {
          propagation.enabled = no
          tracing.enabled = no
        }
        server {
          propagation.enabled = no
          tracing.enabled = no
        }
      }
      filters {
        actors.track {
          includes = ["baker/user/ProcessIndexActor", "baker/user/RecipeManager"]
          excludes = ["baker/system/**"]
        }
        dispatchers {
          includes = [ "**" ]
        }
        routers {
          includes = []
        }
      }
    }
  }
}

