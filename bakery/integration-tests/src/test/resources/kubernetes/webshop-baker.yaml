apiVersion: apps/v1
kind: Deployment
metadata:
  name: webshop-baker
spec:
  replicas: 1
  selector:
    matchLabels:
      name: webshop-baker
  template:
    metadata:
      labels:
        name: webshop-baker
    spec:
      automountServiceAccountToken: true
      containers:
        - name: state
          image: bakery-state:local
          volumeMounts:
            - mountPath: /opt/docker/conf/
              name: config
              readOnly: true
          ports:
            - containerPort: 8080
              name: state-api
              protocol: TCP
            - containerPort: 9095
              name: state-metrics
              protocol: TCP
            - containerPort: 8558
              name: management
              protocol: TCP
            - containerPort: 2552
              name: remoting
              protocol: TCP
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /health/alive
              port: management
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /health/ready
              port: management
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
        - name: interactions
          image: interaction-example-reserve-items:local
          env:
            - name: INTERACTION_HTTPS_ENABLED
              value: "false"
          ports:
            - containerPort: 8081
              name: interactions
              protocol: TCP
            - containerPort: 9096
              name: ints-metrics
              protocol: TCP
            - containerPort: 9999
              name: ints-health
              protocol: TCP
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port:  ints-health
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port:  ints-health
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
      restartPolicy: Always
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: webshop-baker
              - configMap:
                  name: webshop-baker-recipes
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: webshop-baker
data:
  test.conf: |
    test = conf
  application.conf: |

    baker {
      recipe-poll-interval: 5 seconds
      event-sink {
        class: "com.ing.bakery.baker.KafkaEventSink",
        bootstrap-servers: "kafka-event-sink:9092",
        topic: "events"
      }
      interactions {
        localhost.port = 8081
        kubernetes.pod-label-selector = "bakery=webshop"
      }
    }

    akka {
      actor {
        provider = "cluster"
      }
      remote.artery {
        canonical {
          hostname = "127.0.0.1"
          port = 2551
        }
      }

      cluster {
        seed-nodes = ["akka://baker@127.0.0.1:2551"]
      }

      persistence {

        max-concurrent-recoveries = 10
        snapshot-store.plugin = ""

        journal {
          plugin = "akka.persistence.cassandra.journal"
          auto-start-journals = ["akka.persistence.cassandra.journal"]
        }

        cassandra {

          session-dispatcher = "akka.persistence.cassandra.default-dispatcher"
          datastax-java-driver-config = "datastax-java-driver"

          read-profile = "akka-persistence-cassandra-profile"
          write-profile = "akka-persistence-cassandra-profile"

          meta-in-events-by-tag-view = off
          support-all-persistence-ids = off
          coordinated-shutdown-on-error = off

          journal {

            class = "akka.persistence.cassandra.journal.CassandraJournal"
            plugin-dispatcher = "akka.persistence.cassandra.default-dispatcher"

            keyspace-autocreate = true
            tables-autocreate = true

            keyspace = "akka"
            table = "messages"

            table-compaction-strategy {
              class = "SizeTieredCompactionStrategy"
            }

            metadata-table = "metadata"
            replication-strategy = "SimpleStrategy"

          }

          events-by-tag {
            enabled = false
            pubsub-notification = off
          }

          healthcheck {
            plugin-location = "akka.persistence.cassandra"
            timeout = 5s
            health-check-cql = "SELECT now() FROM system.local"
          }

          default-dispatcher {
            type = Dispatcher
            executor = "fork-join-executor"
            fork-join-executor {
              parallelism-min = 6
              parallelism-factor = 1
              parallelism-max = 6
            }
          }
        }
      }
    }

    datastax-java-driver {

      basic {
        contact-points = ["cassandra:9042"]
        load-balancing-policy.local-datacenter = "datacenter1"
      }
      advanced {
        auth-provider {
          class = PlainTextAuthProvider
          username = "cassandra"
          password = "cassandra"
        }
      }
      profiles {
        akka-persistence-cassandra-profile {
          basic.request {
            consistency = LOCAL_QUORUM
            default-idempotence = true
          }
        }
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: webshop-baker-recipes
  labels:
    version: "1"
binaryData:
  Webshop.recipe: >-
    CgdXZWJzaG9wEvUNChYKFAoQdW5hdmFpbGFibGVJdGVtcxABCkVaQwo/ChdTaGlwcGluZ0FkZHJlc3NSZWNlaXZlZBIkCg9zaGlwcGluZ0FkZHJlc3MSESIPCg0KB2FkZHJlc3MSAggREAEKEwoRCg1yZXNlcnZlZEl0ZW1zEAEKGVoXChMKEVBheW1lbnRTdWNjZXNzZnVsEAAKCwoJCgVpdGVtcxABCg8KDQoJU2hpcEl0ZW1zEAIKSFpGCkIKGlBheW1lbnRJbmZvcm1hdGlvblJlY2VpdmVkEiQKEnBheW1lbnRJbmZvcm1hdGlvbhIOIgwKCgoEaW5mbxICCBEQAQohCh8KG1BheW1lbnRTdWNjZXNzZnVsLVNoaXBJdGVtcxAECq0BYqoBChMKEVNoaXBwaW5nQ29uZmlybWVkEhMKEVNoaXBwaW5nQ29uZmlybWVkIiQKD3NoaXBwaW5nQWRkcmVzcxIRIg8KDQoHYWRkcmVzcxICCBEiPgoNcmVzZXJ2ZWRJdGVtcxItIisKHQoFaXRlbXMSFBoSChAiDgoMCgZpdGVtSWQSAggRCgoKBGRhdGESAggWKglTaGlwSXRlbXMyCVNoaXBJdGVtc1ICCgAKFVoTCg8KDVBheW1lbnRGYWlsZWQQAArwAmLtAgpEChhPcmRlckhhZFVuYXZhaWxhYmxlSXRlbXMSKAoQdW5hdmFpbGFibGVJdGVtcxIUGhIKECIOCgwKBml0ZW1JZBICCBEKTwoNSXRlbXNSZXNlcnZlZBI+Cg1yZXNlcnZlZEl0ZW1zEi0iKwodCgVpdGVtcxIUGhIKECIOCgwKBml0ZW1JZBICCBEKCgoEZGF0YRICCBYSRAoYT3JkZXJIYWRVbmF2YWlsYWJsZUl0ZW1zEigKEHVuYXZhaWxhYmxlSXRlbXMSFBoSChAiDgoMCgZpdGVtSWQSAggREk8KDUl0ZW1zUmVzZXJ2ZWQSPgoNcmVzZXJ2ZWRJdGVtcxItIisKHQoFaXRlbXMSFBoSChAiDgoMCgZpdGVtSWQSAggRCgoKBGRhdGESAggWIh0KBWl0ZW1zEhQaEgoQIg4KDAoGaXRlbUlkEgIIESoMUmVzZXJ2ZUl0ZW1zMgxSZXNlcnZlSXRlbXNSAgoAChFyDwoNcmVzZXJ2ZWRJdGVtcwodChsKF1NoaXBJdGVtcy1yZXNlcnZlZEl0ZW1zEAgKFQoTCg9zaGlwcGluZ0FkZHJlc3MQAQoyWjAKLAoLT3JkZXJQbGFjZWQSHQoFaXRlbXMSFBoSChAiDgoMCgZpdGVtSWQSAggREAEKSlpICkQKGE9yZGVySGFkVW5hdmFpbGFibGVJdGVtcxIoChB1bmF2YWlsYWJsZUl0ZW1zEhQaEgoQIg4KDAoGaXRlbUlkEgIIERAACh8KHQoZTWFrZVBheW1lbnQtcmVzZXJ2ZWRJdGVtcxAIClVaUwpPCg1JdGVtc1Jlc2VydmVkEj4KDXJlc2VydmVkSXRlbXMSLSIrCh0KBWl0ZW1zEhQaEgoQIg4KDAoGaXRlbUlkEgIIEQoKCgRkYXRhEgIIFhAAChlaFwoTChFTaGlwcGluZ0NvbmZpcm1lZBAAChEKDwoLTWFrZVBheW1lbnQQAgrrAWLoAQoTChFQYXltZW50U3VjY2Vzc2Z1bAoPCg1QYXltZW50RmFpbGVkEhMKEVBheW1lbnRTdWNjZXNzZnVsEg8KDVBheW1lbnRGYWlsZWQiFgoQcmVjaXBlSW5zdGFuY2VJZBICCBEiPgoNcmVzZXJ2ZWRJdGVtcxItIisKHQoFaXRlbXMSFBoSChAiDgoMCgZpdGVtSWQSAggRCgoKBGRhdGESAggWIiQKEnBheW1lbnRJbmZvcm1hdGlvbhIOIgwKCgoEaW5mbxICCBEqC01ha2VQYXltZW50MgtNYWtlUGF5bWVudFICCgAKGAoWChJwYXltZW50SW5mb3JtYXRpb24QAQoSChAKDFJlc2VydmVJdGVtcxACEgYIFRAUGAESIAgWEA8YASIYT3JkZXJIYWRVbmF2YWlsYWJsZUl0ZW1zEhUIFhARGAEiDUl0ZW1zUmVzZXJ2ZWQSBggUEBMYARIGCAIQCxgBEgYIBhAVGAESBggIEAUYARIGCAEQDRgBEgYIDRAIGAESBggKEBYYARIGCAMQBxgBEgYIBBAKGAESBggMEAgYARIGCBEQAhgBEgYIBxAIGAESBggPEAAYARIZCAUQEhgBIhFTaGlwcGluZ0NvbmZpcm1lZBIGCAsQEBgBEgYICxAMGAESBggQEBQYARIZCBMQAxgBIhFQYXltZW50U3VjY2Vzc2Z1bBIVCBMQCRgBIg1QYXltZW50RmFpbGVkEgYIDhAEGAE6EDMxOGFlNmJjMDAxMWE3YWQ=
---
kind: Service
apiVersion: v1
metadata:
  name: webshop-baker
spec:
  ports:
    - name: api
      protocol: TCP
      port: 8080
      targetPort: state-api
  selector:
    name: webshop-baker
  type: LoadBalancer
  sessionAffinity: None
