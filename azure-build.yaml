trigger:
  batch: true
  branches:
    include:
      - master
      - feature*

parameters:
  - name: ForcePublish
    default: false
    type: boolean
    displayName: Force publish (otherwise nothing is published from PR/branch builds)

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: BakeryOSSFeedCredentials
  - name: CACHE
    value: $(HOME)/.cache
  - name: IVY_HOME
    value: $(Pipeline.Workspace)/.ivy2
  - name: CACHE_RUN_ID
    value: "20210305"

steps:
  - task: Bash@3
    displayName: Scan sources
    inputs:
      targetType: 'inline'
      script: |
        echo $(Build.Repository.Name)
      failOnStderr: true

  - task: DownloadSecureFile@1
    displayName: Get source scan script
    name: sourceScan
    inputs:
      secureFile: sourceScan.sh

  - task: Bash@3
    displayName: Scan sources
    condition: ne(variables['System.PullRequest.IsFork'], true)
    inputs:
      targetType: 'inline'
      script: |
        bash $(sourceScan.secureFilePath)
      failOnStderr: true

  - task: CacheBeta@1
    displayName: Package resolver cache
    inputs:
      key: cache_$(CACHE_RUN_ID)
      path: '$(CACHE)'

  - task: CacheBeta@1
    displayName: Ivy resolver cache
    inputs:
      key: ivy_home_$(CACHE_RUN_ID)
      path: '$(IVY_HOME)'

  - task: Bash@3
    displayName: Generate artifacts' version
    inputs:
      targetType: 'inline'
      script: bash ./set-version.sh

  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
      cleanDestinationDirectory: false

  - task: Bash@3
    displayName: 'Building and testing main Baker'
    inputs:
      targetType: 'inline'
      script: |
        sbt -Divy.home=${IVY_HOME} -Dsbt.ivy.home=${IVY_HOME} coverage test coverageReport && bash <(curl -s https://codecov.io/bash)
      failOnStderr: false

  - task: Bash@3
    displayName: 'Building and testing examples'
    inputs:
      targetType: 'inline'
      script: |
        sbt -Divy.home=${IVY_HOME} -Dsbt.ivy.home=${IVY_HOME} "project interaction-example-make-payment-and-ship-items; test; project interaction-example-reserve-items; test; project bakery-client-example; test; project bakery-kafka-listener-example; test"
      failOnStderr: false

  - ${{ if or(eq(parameters['ForcePublish'],true),eq(variables['Build.SourceBranch'], 'refs/heads/master')) }}:
    - task: Bash@3
      displayName: 'Prepare publishing credentials'
      inputs:
        targetType: 'inline'
        script: printf "realm=pkgs.dev.azure.com\nhost=pkgs.dev.azure.com\nuser=${FEEDUSER}\npassword=${FEEDPASSWORD}\n" > ~/.credentials
      env:
        FEEDPASSWORD: $(feedPassword) # secrets extracted explicitly, other vars - from the group

    - script: sbt -Divy.home=${IVY_HOME} -Dsbt.ivy.home=${IVY_HOME} "clean; aetherDeploy; project interaction-example-make-payment-and-ship-items; aetherDeploy; project interaction-example-reserve-items; aetherDeploy; project bakery-client-example; aetherDeploy; project bakery-kafka-listener-example; aetherDeploy"
      displayName: 'Building and publishing Baker with examples'

    - task: Docker@2
      displayName: Login to docker
      inputs:
        command: login
        containerRegistry: INGBakeryAtDockerHub

    - task: Bash@3
      displayName: 'Prepare docker build environments'
      inputs:
        targetType: 'inline'
        script: |
          sbt baker-state/Docker/stage
          VERSION=$(./get-version.sh)
          echo "##vso[task.setvariable variable=BAKER_VERSION]${VERSION}"

    - task: Docker@2
      displayName: 'Build and push baker image'
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/bakery/baker-state/target/docker
        command: buildAndPush
        repository: ingbakery/baker
        dockerfile: $(Build.SourcesDirectory)/bakery/baker-state/target/docker/stage/Dockerfile
        tags: latest,$(BAKER_VERSION)
