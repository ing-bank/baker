apiVersion: v1
kind: Service
metadata:
  name: kafka-event-sink
  labels:
    app: kafka-event-sink
    test-facility: "true"
spec:
  selector:
    app: kafka-event-sink
  ports:
    - name: kafka-broker
      port: 9092
      targetPort: broker
      protocol: TCP
    - name: kafka-broker-internal
      port: 19092
      targetPort: broker-internal
      protocol: TCP
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-event-sink
    test-facility: "true"
  name: kafka-event-sink
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-event-sink
  template:
    metadata:
      labels:
        app: kafka-event-sink
        test-facility: "true"
    spec:
      containers:
        - name: zookeeper
          image: zookeeper:3.4
          env:
            - name: ZOO_MY_ID
              value: "1"
            - name: ZOO_PORT
              value: "2181"
            - name: ZOO_SERVERS
              value: "server.1=localhost:2888:3888"
          resources:
            requests:
              memory: 384M
              cpu: 100m
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: server
            - containerPort: 3888
              name: leader-election
          readinessProbe:
            tcpSocket:
              port: 2181
          livenessProbe:
            tcpSocket:
              port: 2181
          volumeMounts:
            - name: zookeeper-data
              mountPath: /var/lib/zookeeper
        - name: kafka
          image: confluentinc/cp-kafka:5.0.1
          env:
            - name: KAFKA_LISTENERS
              value: "EXTERNAL://:9092,INTERNAL://:19092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "EXTERNAL://kafka-event-sink:9092,INTERNAL://kafka-event-sink:19092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "localhost:2181"
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_HEAP_OPTS
              value : "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
            - name: KAFKA_LOG4J_LOGGERS
              value: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
          resources:
            requests:
              memory: 256M
              cpu: 200m
          ports:
            - containerPort: 9092
              name: broker
            - containerPort: 19092
              name: broker-internal
          readinessProbe:
            tcpSocket:
              port: 9092
          livenessProbe:
            exec:
              command:
                - sh
                - -ec
                - /usr/bin/jps | /bin/grep -q SupportedKafka
            initialDelaySeconds: 30
            timeoutSeconds: 5
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh",
                          "-c" ,
                          "sleep 10; kafka-topics --zookeeper localhost:2181 --partitions=1 --replication-factor=1 --create --topic recipe-events; kafka-topics --zookeeper localhost:2181 --partitions=1 --replication-factor=1 --create --topic baker-events"]
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka
        - name: kafkacat
          image: confluentinc/cp-kafkacat
          command: ["/bin/sh"]
          args: ["-c", "trap : TERM INT; sleep infinity & wait"]
      volumes:
        - name: zookeeper-data
          emptyDir: {}
        - name: kafka-data
          emptyDir: {}
