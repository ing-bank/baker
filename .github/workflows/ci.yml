name: CI
on:
  workflow_dispatch:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]
jobs:
  ci:
    # run on 1) push, 2) manual trigger, 3) external PRs
    # do not run on internal since those will be run by push to branch
    if: |
      github.event_name == 'push' || 
      github.event_name == 'workflow_dispatch' || 
      github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt
      - name: Run tests and generate coverage report
        run: |-
          cp .jvmopts-ci .jvmopts
          sbt coverage test coverageReport && bash <(curl -s https://codecov.io/bash)  
      - name: Prepare release notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish:
    name: Publish release
    needs: [ci]
    # run on 1) tags starting with v, 2) manual trigger
    # do not run on pull requests
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt
      - name: Compile
        run: sbt compile
      - name: Publish artifacts
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      - name: Extract version from commit message
        run: |
          version=${GITHUB_REF/refs\/tags\/v/}
          echo "VERSION=$version" >> $GITHUB_ENV
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
      - name: Publish release notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          publish: true
          name: "v${{ env.VERSION }}"
          tag: "v${{ env.VERSION }}"
          version: "v${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  dependency-submission:
    name: Submit dependency graph
    needs: [ci]
    # run on 1) master branch
    # do not run on pull requests
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt
      - name: Submit dependency graph 
        uses: scalacenter/sbt-dependency-submission@v2
      